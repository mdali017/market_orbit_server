generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  role      UserRole
  Admins    Admins?
  Vendors   Vendors?
  Customers Customers?
  Review    Review[]
  Shop      Shop?
}

model Admins {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Vendors {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Customers {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Shop {
  id          String  @id @default(uuid())
  name        String
  logo        String?
  description String
  userId      String  @unique
  vendor      User    @relation(fields: [userId], references: [id])
}

model ProductCategory {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model Product {
  id             String          @id @default(uuid())
  name           String
  price          Float
  categoryId     String
  category       ProductCategory @relation(fields: [categoryId], references: [id])
  inventoryCount Int             @default(0)
  images         String[]        @default([]) // Default empty array if no images
  discounts      Float? // Percentage or flat discount (nullable)
  ratings        Float? // Average ratings (nullable)
  reviews        Review[] // Relation to Review model (defined separately)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  rating    Int      @default(0) // Rating out of 5
  comment   String?
  createdAt DateTime @default(now())
}

enum UserRole {
  ADMIN
  VENDOR
  CUSTOMER
}
